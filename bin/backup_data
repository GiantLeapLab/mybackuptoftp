#!/bin/bash
# Create individual SQL files for each database. These files
# are imported automatically during an initial provision if
# the databases exist per the import-sql.sh process.

echo
echo "--- Start $0"

set -o nounset
set -e 

TYPE="data"

### Input parameters ###
PERIOD=${1:-daily}
NOW=${2:-$(date +"%y%m%d")}
DIR_ROOT=${3:-.}

### Directories ###
DIR_BIN="${DIR_ROOT}/bin"
DIR_CFG="${DIR_ROOT}/cfg"
DIR_ARC="${DIR_ROOT}/arc"
DIR_LOG="${DIR_ROOT}/log"

### GPG settings ###
GPG_USERID=$(cat $DIR_CFG/gpg_userid.txt)
GPG_OPT="-e -r"

### Split settings ###
SPLIT_OPT="-d -a 3 -b $(cat $DIR_CFG/split_size.txt)"

### System Setup ###
GZIP_OPT=-c9
DIRS=$(cat "${DIR_CFG}/dirs_${PERIOD}.lst")
echo "Loaded list directories from ${DIR_CFG}/dirs_${PERIOD}.lst"

#---------------------------------------------------
[ ! -d $DIR_ARC ] && mkdir -p $DIR_ARC || :

for DIR in $DIRS;
do
  if [ -d "$DIR" ] ;
  then 
  DATA_NAME=$(basename "$DIR")
  echo 
  echo "Backing: $DIR"
  BACKUP_FILE="${DATA_NAME}.tgz.gpg" 

  cd $DIR_ARC
  tar cz $DIR                    \
    | gpg $GPG_OPT "$GPG_USERID" \
    | split $SPLIT_OPT - "${BACKUP_FILE}."
  cd -

  $DIR_BIN/move_file_to_remote $PERIOD $NOW $TYPE $BACKUP_FILE $DIR_ROOT
  echo
  echo "Dir $DIR backed up..."
  fi
done    

exit 0